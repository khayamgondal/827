Thur, Nov 2:
  -- Get latest version of ast.intFloat:
     git log -1
  -- Decide if you want to use ast.intFloat or ast.intOnly or
     some other AST representation
  -- review operator overload
  -- diff between dynamic_cast and static_cast
  -- Review Singleton
  -- Virtual destructors

Tues, Oct 31:
  -- review operator overload
  -- Review ast.intFloat
  -- How does Python grammar handle +/- for binary and unary
     Unfortunately, +/- reduce to the same rule.
     For unary, it's pick_unop
     for binary, it's pick_PLUS_MINUS
  -- Track getting PLUS to work for mypy
  -- discuss how to eliminate:
  includes/parse.y:479.11-14: warning: type clash on default action: <node>
  -- Discuss Exam #1

Thur, Oct 26:
  -- Discuss specs for Project 4: incorporate an AST into mypy, eval it
  -- Review contents of project/3 and  project/4
  -- Review inheritance &  polymorphism (find the shapes dir in repo) 
     -- relate polymorphism to project #4 and nodes of an AST
     -- how  can we use polymorphism for multiple types?
        -- don't - use strings
        -- do - use polymorphism, but types are a problem in poly. Why?
  -- Review test question about precedence set by grammar. Why do this?
  -- Review test question about inheritance. Why do this?
  -- Motivate and present the Visitor Pattern
  -- Review ast
  -- Present code in literals dir
  -- present code in ast.intFloat
  -- Discuss how to incorporate addition into MyPy

Tues, Oct 24:
  -- Exam#1

Thus, Oct 19:
  -- In Python:
    -- what is -1/2
    -- what is -1/2-1/2
  -- Tour of the repo: please ask if something's missing
  -- Semantic action execution
  -- Inheritance, 3 base class fns
  -- Singleton Pattern
  -- Symbol tables
  -- ASTs
  -- Project #4
  -- Give back Quiz
  -- Exam #1

Tues, Oct 10:
  -- Bison, conflicts, & trace
  -- Typing the stack
  -- Project #3
  -- Answer keys for #1 and #2
  -- Quizzes and projects ==> Thurs
  -- Exam: Oct 24th
  -- Project #4

Thurs, Oct 5:
  -- locations:
    -- parens 
      -- Do semantic actions first
      -- Then do locations!
    -- calculator
  -- Project #3:
    -- what about elif?
  -- Quiz #2

Tues, Oct 3:
  -- Quiz #2

Thur, Sept 28:
  -- agenda is in Materials dir of course repo
  -- Review simple calculator
       examples/bison/calculator/simple
  -- do calculator in debug mode
       examples/bison/calculator/debug
  -- type the parse stack
       examples/bison/calculator/typedStack
  -- Bison & flex automatically track line no's
       examples/bison/calculator/lineno
  -- Project #3

Tues, Sept 26:
  -- Quiz will be Tuesday, Oct 3rd
  -- Intro to Python 2.7.2: while, for, functions, list comprehension,
       indentation, duck typing
  -- Intro to McCabe Cyclomatic Complexity
  -- Draft of Project #3
       mine and pythons numbers for x.py
       pythons numbers of y.py

  -- Intro to Parser for Python 2.7.2
  -- Bottom up parsing and Bison
       Why do we care how Bison parses? Can't we just trust it?
       Just do it! (cf Nike)

Thur, Sept 21:
  -- Project #2
  -- ESEM 2017, intro to Python
  -- vectors: iterators, ranged for, erase, push_back, 
     push_front, emplace_back
  -- flex: states
  -- bison: bottom up parsing
    -- balanced parens -- count them

Tues, Sept 19:
  -- My web page
  -- New spec for proj #2
  -- New flex slides: smallest, repattern
  -- vectors
  -- maps
  -- give back quiz #1

Thur, Sept 14
-- Office hours
-- Quiz #1
-- Flex slides
-- play with flex & reg expr
-- C++ stack
-- talk about project #2
